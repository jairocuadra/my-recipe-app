{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nfunction EditModeModalComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r6.label, \" \");\n  }\n}\nfunction EditModeModalComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please select a role \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditModeModalComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const reason_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", reason_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", reason_r7.label, \" \");\n  }\n}\nfunction EditModeModalComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please select a reason \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditModeModalComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Comments are required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditModeModalComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Comments cannot exceed 500 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let EditModeModalComponent = /*#__PURE__*/(() => {\n  class EditModeModalComponent {\n    constructor(fb, dialogRef) {\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.roles = [{\n        value: 'underwriter',\n        label: 'Underwriter'\n      }, {\n        value: 'case_manager',\n        label: 'Case Manager'\n      }, {\n        value: 'supervisor',\n        label: 'Supervisor'\n      }];\n      this.reasons = [{\n        value: 'review',\n        label: 'Case Review'\n      }, {\n        value: 'update',\n        label: 'Update Information'\n      }, {\n        value: 'approve',\n        label: 'Approval Process'\n      }, {\n        value: 'other',\n        label: 'Other'\n      }];\n      this.editForm = this.fb.group({\n        role: ['', Validators.required],\n        reason: ['', Validators.required],\n        comments: ['', [Validators.required, Validators.maxLength(500)]]\n      });\n    }\n    onSubmit() {\n      if (this.editForm.valid) {\n        this.dialogRef.close(this.editForm.value);\n      }\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    getCharacterCount() {\n      return this.editForm.get('comments')?.value?.length || 0;\n    }\n    static {\n      this.ɵfac = function EditModeModalComponent_Factory(t) {\n        return new (t || EditModeModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: EditModeModalComponent,\n        selectors: [[\"app-edit-mode-modal\"]],\n        decls: 30,\n        vars: 9,\n        consts: [[1, \"edit-mode-modal\"], [\"mat-dialog-title\", \"\"], [1, \"edit-mode-dialog-content\"], [3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"role\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"formControlName\", \"reason\"], [\"matInput\", \"\", \"formControlName\", \"comments\", \"rows\", \"4\", \"placeholder\", \"Please provide details about the changes you plan to make...\"], [\"align\", \"end\"], [\"align\", \"end\", 1, \"edit-mode-dialog-actions\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n        template: function EditModeModalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"Enter Edit Mode\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"mat-dialog-content\", 2)(4, \"form\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n            i0.ɵɵtext(7, \"Select Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-select\", 5);\n            i0.ɵɵtemplate(9, EditModeModalComponent_mat_option_9_Template, 2, 2, \"mat-option\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, EditModeModalComponent_mat_error_10_Template, 2, 0, \"mat-error\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"mat-form-field\", 4)(12, \"mat-label\");\n            i0.ɵɵtext(13, \"Reason for Edit\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"mat-select\", 8);\n            i0.ɵɵtemplate(15, EditModeModalComponent_mat_option_15_Template, 2, 2, \"mat-option\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(16, EditModeModalComponent_mat_error_16_Template, 2, 0, \"mat-error\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"mat-form-field\", 4)(18, \"mat-label\");\n            i0.ɵɵtext(19, \"Comments\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"textarea\", 9);\n            i0.ɵɵelementStart(21, \"mat-hint\", 10);\n            i0.ɵɵtext(22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(23, EditModeModalComponent_mat_error_23_Template, 2, 0, \"mat-error\", 7);\n            i0.ɵɵtemplate(24, EditModeModalComponent_mat_error_24_Template, 2, 0, \"mat-error\", 7);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(25, \"mat-dialog-actions\", 11)(26, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function EditModeModalComponent_Template_button_click_26_listener() {\n              return ctx.onCancel();\n            });\n            i0.ɵɵtext(27, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"button\", 13);\n            i0.ɵɵlistener(\"click\", function EditModeModalComponent_Template_button_click_28_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵtext(29, \" Start Editing \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_4_0;\n            let tmp_6_0;\n            let tmp_7_0;\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.editForm.get(\"role\")) == null ? null : tmp_2_0.hasError(\"required\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.reasons);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.editForm.get(\"reason\")) == null ? null : tmp_4_0.hasError(\"required\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"\", ctx.getCharacterCount(), \"/500\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.editForm.get(\"comments\")) == null ? null : tmp_6_0.hasError(\"required\"));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.editForm.get(\"comments\")) == null ? null : tmp_7_0.hasError(\"maxlength\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.editForm.valid);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.MatButton, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i5.MatFormField, i5.MatLabel, i5.MatHint, i5.MatError, i6.MatInput, i7.MatSelect, i8.MatOption],\n        styles: [\".edit-mode-modal[_ngcontent-%COMP%]{min-width:400px;max-width:600px;padding:16px}.edit-mode-modal[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0 0 24px;color:var(--text-primary);font-size:20px;font-weight:500}.edit-mode-modal[_ngcontent-%COMP%]   .edit-mode-dialog-content[_ngcontent-%COMP%]{padding:0;margin:0;color:var(--text-primary)}.edit-mode-modal[_ngcontent-%COMP%]   .edit-mode-dialog-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}.edit-mode-modal[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]{width:100%}.edit-mode-modal[_ngcontent-%COMP%]   .edit-mode-dialog-actions[_ngcontent-%COMP%]{margin:24px -16px -16px;padding:16px;background-color:var(--bg-secondary);border-top:1px solid var(--border-color)}.edit-mode-modal[_ngcontent-%COMP%]   .edit-mode-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] + button[_ngcontent-%COMP%]{margin-left:8px}.edit-mode-modal[_ngcontent-%COMP%]   .edit-mode-dialog-actions[_ngcontent-%COMP%]   button[color=primary][_ngcontent-%COMP%]{color:#fff;background-color:var(--primary-color)}.edit-mode-modal[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:vertical;min-height:100px}.edit-mode-modal[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{color:var(--text-tertiary);opacity:.7}.edit-mode-modal[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%]{color:var(--text-secondary)}.edit-mode-modal[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .edit-mode-modal[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-form-field-outline-thick[_ngcontent-%COMP%]{color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%]{color:var(--text-primary)}.edit-mode-modal[_ngcontent-%COMP%]   .mat-hint[_ngcontent-%COMP%]{color:var(--text-tertiary)}.edit-mode-modal[_ngcontent-%COMP%]     .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]     .mat-form-field-ripple{background-color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]     .mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]     .mat-form-field.mat-focused .mat-form-field-ripple{background-color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]     .mat-input-element{caret-color:var(--primary-color)!important}.edit-mode-modal[_ngcontent-%COMP%]     .mat-form-field-invalid .mat-input-element{caret-color:var(--error)!important}\"]\n      });\n    }\n  }\n  return EditModeModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}